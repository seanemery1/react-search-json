{"version":3,"sources":["components/searchBox/SearchBox.js","components/popup/Popup.js","components/recipe/Recipe.js","components/filter/Filter.js","App.js","serviceWorker.js","index.js"],"names":["SearchBox","_handleKeyDown","e","key","console","log","_search","state","title","rateMin","rateMax","calories","category","showResults","_updateState","bind","target","this","setState","name","value","props","className","type","id","placeholder","onChange","onKeyDown","onClick","for","min","max","defaultChecked","Component","Popup","cookingMethod","prepTime","description","text","closePopup","React","Recipe","showPopup","togglePopup","src","recipe","image","alt","servings","recipeCategory","dietLabel","rating","Filter","filterCriteria","toString","toLowerCase","includes","recipeComponent","recipes","filter","map","recipeClicked","showRecipe","_countClicks","recipesJson","App","param","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a8d9b346.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./SearchBox.css\";\r\n\r\nclass SearchBox extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state= {\r\n          title : \"\",\r\n          rateMin : 0,\r\n          rateMax : 5,\r\n          calories: 0,\r\n          category: \"Any\",\r\n          showResults: false\r\n        };\r\n        this._updateState = this._updateState.bind(this);\r\n        this._search = this._search.bind(this);\r\n        \r\n      }\r\n    \r\n      _handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n          console.log(\"success\");\r\n          this._search();\r\n        }\r\n      }\r\n\r\n      _updateState({ target }) {\r\n        this.setState({\r\n          [target.name]: target.value\r\n        });\r\n      }\r\n\r\n      _search() {\r\n        this.setState({ showResults: true});\r\n        this.props._search(this.state);\r\n      }    \r\n\r\n    render(){\r\n   \r\n            return(\r\n                <div className=\"searchBox\">\r\n                    <h1> \"Enoy our recipes!\"</h1>\r\n                    <div>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"inputTitle\"\r\n                    placeholder=\"Search for recipes...\"\r\n                    value={this.state.title}\r\n                    onChange={this._updateState}\r\n                    onKeyDown={this._handleKeyDown}/>\r\n                    <button onClick={this._search}>Search</button>\r\n                    </div>\r\n                    <h3>Advanced Search Options (Optional)</h3>\r\n                   \r\n                    <div>\r\n                    <label for=\"inputRateMin\">Ratings: </label>\r\n                    <input\r\n                    type=\"number\"\r\n                    name=\"rateMin\"\r\n                    id=\"inputRateMin\"\r\n                    placeholder=\"0\"\r\n                    min=\"0\"\r\n                    max=\"5\"\r\n                    value={this.state.rateMin}\r\n                    onChange={this._updateState}/>\r\n                    \r\n                    <label for=\"inputRateMax\"> to </label>\r\n                    <input\r\n                    type=\"number\"\r\n                    name=\"rateMax\"\r\n                    id=\"inputRateMax\"\r\n                    placeholder=\"0\"\r\n                    min=\"0\"\r\n                    max=\"5\"\r\n                    value={this.state.rateMax}\r\n                    onChange={this._updateState}/>     \r\n\r\n                    <label for=\"calories\"> Calories:</label>\r\n                    <select name=\"calories\" id=\"calories\" onChange={this._updateState}>\r\n                        <option value=\"0\">Any</option>\r\n                        <option value=\"1\">Less than 400</option>\r\n                        <option value=\"2\">401-800</option>\r\n                        <option value=\"3\">801-1200</option>\r\n                        <option value=\"4\">1201+</option>\r\n                    </select>\r\n                    </div>\r\n\r\n                    <p>Please select a category: </p>\r\n                    <div onChange={this._updateState}>\r\n                        <input type=\"radio\" id=\"any\" name=\"category\" value=\"Any\" defaultChecked/>Any\r\n                        <input type=\"radio\" id=\"appetizer\" name=\"category\" value=\"Appetizer\"/>Appetizer\r\n                        <input type=\"radio\" id=\"entree\" name=\"category\" value=\"Entree\"/>Entree\r\n                        <input type=\"radio\" id=\"dessert\" name=\"category\" value=\"Dessert\"/>Dessert\r\n                    </div>   \r\n                </div>\r\n            );        \r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';  \r\nimport './Popup.css';  \r\n\r\nclass Popup extends React.Component {  \r\n  render() {  \r\n    return (  \r\n      <div className='popup'>  \r\n          <div className='popup\\_inner'> \r\n              <h1>{this.props.title}</h1>\r\n              <h2>Cooking Method: {this.props.cookingMethod} | Prep Time: {this.props.prepTime} mins</h2>\r\n              <h2>Description: {this.props.description}</h2>\r\n              <h3>{this.props.text}</h3>  \r\n              <button onClick={this.props.closePopup}>Close Me</button>  \r\n          </div>  \r\n      </div>  \r\n    );  \r\n  }  \r\n}  \r\n\r\nexport default Popup;","import React, { Component } from 'react';\r\nimport \"./Recipe.css\";\r\nimport Popup from '../popup/Popup';  \r\n\r\nclass Recipe extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showPopup: false\r\n        }\r\n    }\r\n    \r\n    togglePopup() {  \r\n        this.setState({  \r\n             showPopup: !this.state.showPopup  \r\n        });  \r\n    }    \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"recipe\" onClick={this.togglePopup.bind(this)}>\r\n                <img src={this.props.recipe.image} alt=\"\"/>\r\n                <h3>{this.props.recipe.title} | Calories: {this.props.recipe.calories} | Servings: {this.props.recipe.servings}  </h3>\r\n                <h4>{this.props.recipe.recipeCategory} - {this.props.recipe.dietLabel} </h4>\r\n                <h4>Ratings: {this.props.recipe.rating} stars</h4>\r\n                {\r\n                this.state.showPopup ?\r\n                    <div>\r\n                    <Popup\r\n                    title = {this.props.recipe.title}\r\n                    prepTime = {this.props.recipe.prepTime}\r\n                    cookingMethod = {this.props.recipe.cookingMethod}\r\n                    description = {this.props.recipe.description}\r\n                    text='Click \"Close Me\" to hide popup'  \r\n                    closePopup={this.togglePopup.bind(this)}/>  \r\n                    </div>\r\n                :\r\n                null  \r\n                }  \r\n            </div>\r\n        );        \r\n     }\r\n}\r\n\r\nexport default Recipe;","import React, { Component } from 'react';\r\nimport Recipe from \"./../recipe/Recipe\";\r\nimport './Filter.css';\r\n\r\nclass Filter extends Component{\r\n \r\n    filterCriteria = recipe => {\r\n      const {title, rateMin, rateMax, calories, category} = this.props;\r\n      // console.log(title);\r\n      // console.log(rateMin);\r\n      // console.log(recipe.title);\r\n      \r\n      // console.log(recipe.title.toString().toLowerCase().includes(title.toString().toLowerCase()));\r\n      if (!recipe.title.toString().toLowerCase().includes(title.toString().toLowerCase())) return false;\r\n\r\n      if (rateMin<rateMax) {\r\n        //console.log(recipe.rating<rateMin);\r\n        //console.log(recipe.rating>rateMax);\r\n        if (recipe.rating<rateMin) return false;\r\n        if (recipe.rating>rateMax) return false;\r\n        \r\n      } else {\r\n        //console.log(recipe.rating<rateMax);\r\n        //console.log(recipe.rating>rateMin);\r\n        if (recipe.rating<rateMax) return false;\r\n        if (recipe.rating>rateMin) return false;\r\n        \r\n      }\r\n\r\n      if (calories === \"0\") {\r\n        //console.log(\"calories == 0\");\r\n      }\r\n      if (calories === \"1\") {\r\n        //console.log(\"<400\");\r\n        //console.log((recipe.calories > 400));\r\n        if (recipe.calories > 400) return false;\r\n      }\r\n      if (calories === \"2\") {\r\n        //console.log(\"400-800\");\r\n        //console.log((recipe.calories < 401));\r\n        //console.log((recipe.calories > 800));\r\n        if (recipe.calories < 401) return false;\r\n        if (recipe.calories > 800) return false;\r\n      }\r\n      if (calories === \"3\") {\r\n        //console.log(\"800-1200\");\r\n        //console.log((recipe.calories < 801));\r\n        //console.log((recipe.calories > 1200));\r\n        if (recipe.calories < 801) return false;\r\n        if (recipe.calories > 1200) return false;\r\n      }\r\n      if (calories === \"4\") {\r\n        //console.log(\"1200+\");\r\n        //console.log((recipe.calories < 1201));\r\n        if (recipe.calories < 1201) return false;\r\n      }\r\n      \r\n      if (category !== \"Any\") {\r\n        //console.log(\"category: \" + (recipe.recipeCategory !== category));\r\n        if (recipe.recipeCategory !== category) return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n     render() {\r\n      const filteredRecipes = this.props.recipes.filter(this.filterCriteria);\r\n      const recipeComponent = filteredRecipes.map( recipe => {\r\n        return <Recipe key={recipe.title} recipe={recipe} recipeClicked={(showRecipe) => this._countClicks(showRecipe)}/>\r\n      })\r\n      // console.log(\"Props received from apps\" + this.props);\r\n      // console.log(\"title:\" + this.props.recipes.getElement );\r\n     \r\n      return (\r\n         <div className=\"filter\">\r\n           <br/>\r\n            <div>\r\n              {recipeComponent}\r\n            </div>\r\n         </div>\r\n       )\r\n     }\r\n}\r\n   \r\nexport default Filter;","import React, { Component } from 'react';\nimport './App.css';\nimport recipesJson from \"./assets/data/recipes.json\";\nimport SearchBox from './components/searchBox/SearchBox';\nimport Filter from \"./components/filter/Filter\";\n\nconsole.log(recipesJson);\nconst recipes = recipesJson.recipes;\nconsole.log(recipes);\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state= {\n      title : \"\",\n      rateMin : 0,\n      rateMax : 5,\n      calories: 0,\n      category: \"any\",\n      showPopup: false\n    };\n  }\n\n  togglePopup() {  \n    this.setState({  \n         showPopup: !this.state.showPopup  \n    });  \n  } \n\n  _search(param) {\n    this.setState( {\n      title : param.title,\n      rateMin : param.rateMin,\n      rateMax : param.rateMax,\n      calories: param.calories,\n      category: param.category,\n      showResults: true\n    })\n    // console.log(this.state.title);\n    // console.log(this.state.rateMin);\n    // console.log(this.state.rateMax);\n    // console.log(this.state.calories);\n    // console.log(this.state.category);\n    // console.log(this.state.showResults);\n  }\n\n  render(){\n      \n    return (\n      <div className=\"App\">\n        {!this.state.showResults ?\n        <div className=\"mainPage\">\n          <img id=\"logo\"\n          src=\"https://freelogo-assets.s3.amazonaws.com/sites/all/themes/freelogoservices/images/smalllogorestaurant1.jpg\"\n          alt=\"[Insert Logo Here]\"\n          />\n          <SearchBox _search={this._search.bind(this)}\n          />\n        </div>\n        :\n        <div>\n          <br/>\n          <button onClick={() => this.setState({\n          showResults: !this.state.showResults})}>Back to Search Page</button>\n          <br/>\n          <Filter\n          recipes={recipes}\n          title={this.state.title}\n          rateMin={this.state.rateMin}\n          rateMax={this.state.rateMax}\n          calories={this.state.calories}\n          category={this.state.category}\n          onClick={this.togglePopup.bind(this)}/> \n        </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}